# Generated by Django 4.2.7 on 2023-11-16 10:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appeals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appeal_id', models.IntegerField()),
                ('reader_id', models.IntegerField(blank=True, null=True)),
                ('book_id', models.IntegerField(blank=True, null=True)),
                ('issuedate', models.DateField(db_column='issueDate')),
                ('dateofreturn', models.DateField(blank=True, db_column='dateOfReturn', null=True)),
            ],
            options={
                'db_table': 'appeals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nameofbook', models.CharField(blank=True, db_column='nameOfBook', max_length=25, null=True)),
                ('author', models.CharField(blank=True, max_length=13, null=True)),
                ('genre', models.CharField(blank=True, max_length=10, null=True)),
                ('collateralprice', models.IntegerField(blank=True, db_column='collateralPrice', null=True)),
                ('rentalprice', models.IntegerField(blank=True, db_column='rentalPrice', null=True)),
            ],
            options={
                'db_table': 'books',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fine_id', models.IntegerField(blank=True, null=True)),
                ('appeal_id', models.IntegerField(blank=True, null=True)),
                ('fineprice', models.IntegerField(blank=True, db_column='finePrice', null=True)),
            ],
            options={
                'db_table': 'fines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Readers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reader_id', models.IntegerField()),
                ('surname', models.CharField(blank=True, max_length=15, null=True)),
                ('name', models.CharField(blank=True, max_length=15, null=True)),
                ('fathersname', models.CharField(blank=True, db_column='fathersName', max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=30, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=25, null=True)),
            ],
            options={
                'db_table': 'readers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_id', models.IntegerField(blank=True, null=True)),
                ('reader_id', models.IntegerField(blank=True, null=True)),
                ('percentofsale', models.IntegerField(blank=True, db_column='percentOfSale', null=True)),
            ],
            options={
                'db_table': 'sales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateofreturn', models.DateField(blank=True, db_column='dateOfReturn', null=True)),
                ('appeal_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'testik',
                'managed': False,
            },
        ),
    ]
